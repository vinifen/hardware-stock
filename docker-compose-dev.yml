services:
  db:
    container_name: db
    networks:
      - db-network
    build: 
      context: ./db
      dockerfile: Dockerfile
  backend:
    container_name: backend
    image: php:8.3.18RC1-fpm-alpine3.21
    volumes:
      - ./backend:/backend
    entrypoint: >
      sh -c "
        [ -d vendor ] && rm -rf vendor || echo 'backend vendor does not exist';
        apk add --no-cache bash curl git unzip &&
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
        composer --version &&
        composer install && 
        php -S 0.0.0.0:1111
      "

    networks:
      - hardware-stock-network
  frontend:
    container_name: frontend
    image: node:current-alpine3.21
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
    depends_on:
      - backend
    entrypoint: >
      sh -c "
        [ -d node_modules ] && rm -rf node_modules || echo 'frontend node_modules does not exist';
        npm install &&
        npm run serve
      "
    networks:
      - hardware-stock-network
  web:
    container_name: web
    image: httpd:alpine3.21
    networks:
      - hardware-stock-network
    ports:
      - "${WEB_PORT_DEV}:80"
  networks:
    hardware-stock-network:
      driver: bridge
  db-network:
    driver: bridge